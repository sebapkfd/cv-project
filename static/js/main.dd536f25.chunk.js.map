{"version":3,"sources":["components/Title.js","components/GeneralForm.js","components/General.js","components/dateFormat.js","components/EducationItem.js","components/EducationForm.js","components/Education.js","components/ExperienceItem.js","components/ExperienceForm.js","components/Experience.js","components/SkillItem.js","components/SkillForm.js","components/Skills.js","App.js","index.js"],"names":["Title","className","href","target","rel","src","alt","GeneralForm","submitData","e","preventDefault","props","onSubmit","cancelSubmit","onRender","values","this","id","htmlFor","type","name","defaultValue","lastname","phone","email","onClick","Component","General","handleSubmit","profile","value","isValid","key","setState","info","infoAdded","renderForm","cleanInfo","formActive","state","bind","formComponent","formButton","cleanButton","dateFormat","dateStr","aux","split","join","EducationItem","school","schoolName","careerTitle","initialDate","endDate","initialDateFormat","endDateFormat","onDelete","EducationForm","changeData","onChange","Education","handleChange","prevState","Object","assign","submitSchool","schools","resetForm","uniqid","handleDelete","itemId","filter","cleanEducation","length","map","ExperienceItem","company","companyName","positionTitle","mainTasks","ExperienceForm","Experience","submitCompany","companies","cleanExperience","SkillItem","skill","skillName","SkillForm","Skills","submitSkill","skills","cleanSkills","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd536f25.chunk.js","sourcesContent":["const Title = () =>{\n    return (\n        <div className='titleDiv'>\n            <h1>CV Project</h1>\n            <a href=\"https://github.com/sebapkfd/cv-project\" target=\"_blank\" rel=\"noreferrer\">\n                <img src=\"https://img.icons8.com/fluent-systems-filled/24/ffffff/github.png\" alt=\"Github\"/>\n            </a>\n        </div>\n    )\n}\n\nexport default Title;","import React, {Component} from \"react\";\n\nclass GeneralForm extends Component{\n\n  submitData = (e) => {\n      e.preventDefault();\n      this.props.onSubmit(e);\n  }\n\n  cancelSubmit = (e) => {\n    e.preventDefault();\n    this.props.onRender(e);\n  }\n\n  render() {\n    const values = this.props.values;\n      return (\n          <div className=\"formDiv\">\n            <form onSubmit={this.submitData} id=\"generalInfoForm\">\n              <div className=\"form-group\">\n                <label htmlFor=\"generalInput\">Name</label>\n                <br></br>\n                <input type=\"text\" name=\"name\" defaultValue={values.name}/>\n                <br></br>\n                <label>Career</label>\n                <br></br>\n                <input type=\"text\" name=\"lastname\" defaultValue={values.lastname}/>\n                <br></br>\n                <label>Phone</label>\n                <br></br>\n                <input type=\"text\" name=\"phone\" defaultValue={values.phone}/>\n                <br></br>\n                <label>Email</label>\n                <br></br>\n                <input type=\"text\" name=\"email\" defaultValue={values.email}/>\n              </div>\n              <div className=\"buttonsDiv\">\n                <button type=\"submit\" >\n                  Submit\n                </button>\n                <button onClick={this.cancelSubmit}>\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n      )\n  }\n}\n\nexport default GeneralForm;","import React, {Component} from \"react\";\nimport GeneralForm from \"./GeneralForm\"\n\nclass General extends Component{\n  constructor() {\n    super();\n    this.state = {\n      info : {\n        name: \"\",\n        lastname: \"\",\n        phone: \"\",\n        email: \"\"\n      },\n      formActive: false,\n      infoAdded: false\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.cleanInfo = this.cleanInfo.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const profile = {\n      name : e.target.name.value,\n      lastname : e.target.lastname.value,\n      phone : e.target.phone.value,\n      email : e.target.email.value\n    };\n    let isValid = true;\n    for (let key in profile){\n      if(profile[key] === \"\"){\n        isValid = false;\n      }\n    }\n    if(isValid){\n      this.setState({info : profile});\n      this.setState({infoAdded: true});\n      this.renderForm(e);\n    }\n  }\n\n  cleanInfo = (e) => {\n    e.preventDefault();\n    const profile = {\n      name : \"\",\n      lastname : \"\",\n      phone : \"\",\n      email : \"\"\n    };\n    this.setState({info: profile});\n    this.setState({infoAdded: false});\n    this.setState({formActive : false})\n  }\n\n  renderForm = (e) => {\n    e.preventDefault();\n    const {formActive} = this.state;\n    this.setState({formActive : !formActive});\n  }\n\n  render() {\n    const {name, lastname, phone, email} = this.state.info;\n    const {formActive, infoAdded} = this.state;\n    let formComponent;\n    let formButton;\n    let cleanButton;\n    if(formActive) {\n      formComponent = <GeneralForm \n        onSubmit={this.handleSubmit} \n        values={this.state.info}\n        onRender={this.renderForm}\n      />\n    }else{\n      formButton = (!infoAdded) ? (\n        <div >\n          <button onClick={this.renderForm} className=\"sectionButton\" >Add Information</button>\n       </div>\n      ) : (\n        <div>\n          <button onClick={this.renderForm} className=\"sectionButton\" >Edit Information</button>\n       </div>\n      )\n    }\n\n    if(infoAdded){\n      cleanButton = <div>\n          <button onClick={this.cleanInfo}>Clean</button>\n      </div>\n    }\n\n    return (\n      <div className=\"GeneralDiv\">\n        <div className=\"sectionTitleDiv\">\n          <h2>Personal Information</h2>\n          {formButton}\n          {cleanButton}\n        </div>\n        {formComponent}\n        <p>Name: {name}</p>\n        <p>Last Name:{lastname}</p>\n        <p>Phone:{phone}</p>\n        <p>Email: {email}</p>\n      </div>\n    )\n  }\n}\n\n\nexport default General;","const dateFormat = (dateStr) =>{\n    let aux = dateStr.split(/\\D/g);\n    return [aux[2],aux[1],aux[0] ].join(\"-\");\n};\n\nexport default dateFormat;","import React from \"react\";\nimport dateFormat from \"./dateFormat\";\n\nconst EducationItem = (props) =>{\n    \n    const {schoolName, careerTitle, initialDate, endDate, id} = props.school;\n    const initialDateFormat = dateFormat(initialDate);\n    const endDateFormat = dateFormat(endDate);\n\n    return (\n        <div className=\"schoolItemDiv\">\n            <p>School: {schoolName}</p>\n            <p>Career: {careerTitle}</p>\n            <p>From: {initialDateFormat}</p>\n            <p>Until: {endDateFormat}</p>\n            <button onClick={() => props.onDelete(id)}>\n                Delete\n            </button>\n        </div>\n    )\n}\n\nexport default EducationItem;","import React, {Component} from \"react\";\n\nclass EducationForm extends Component{\n\n    changeData = (e) =>{\n        e.preventDefault();\n        this.props.onChange(e);\n    }\n\n    submitData = (e) => {\n        e.preventDefault();\n        this.props.onSubmit(e);\n    }\n\n    cancelSubmit = (e) => {\n        e.preventDefault();\n        this.props.onRender(e);\n    }\n\n    render() {\n        const {school} = this.props;\n\n        return (\n            <div className=\"formDiv\">\n                <form onSubmit={this.submitData}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"schoolInput\">Enter School</label>\n                        <br></br>\n                        <input\n                            onChange={this.changeData}\n                            value={school.schoolName}\n                            type=\"text\"\n                            name=\"schoolName\"\n                        />\n                        <br></br>\n                        <label>Enter Career</label>\n                        <br></br>\n                        <input\n                            onChange={this.changeData}\n                            value={school.careerTitle}\n                            type=\"text\"\n                            name=\"careerTitle\"\n                        />\n                        <br></br>\n                        <label>Enter Initial Date</label>\n                        <br></br>\n                        <input\n                            onChange={this.changeData}\n                            value={school.initialDate}\n                            type=\"date\"\n                            name=\"initialDate\"\n                        />\n                        <br></br>\n                        <label>Enter Final Date</label>\n                        <br></br>\n                        <input\n                            onChange={this.changeData}\n                            value={school.endDate}\n                            type=\"date\"\n                            name=\"endDate\"\n                        />\n                    </div>\n                    <div className=\"buttonsDiv\">\n                        <button type=\"submit\" >\n                            Add School\n                        </button>\n                        <button onClick={this.cancelSubmit}>\n                            Cancel\n                        </button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default EducationForm;","import React, { Component } from \"react\";\nimport uniqid from \"uniqid\";\nimport EducationItem from \"./EducationItem\";\nimport EducationForm from \"./EducationForm\";\n\nclass Education extends Component{\n  constructor(){\n    super();\n    this.state = {\n      school: {\n        id: uniqid(),\n        schoolName: \"\",\n        careerTitle: \"\",\n        initialDate: \"\",\n        endDate: \"\"\n      },\n      schools: [],\n      formActive: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submitSchool = this.submitSchool.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.cleanEducation = this.cleanEducation.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n  \n  handleChange = (e) => {\n    const {name, value} = e.target;\n    this.setState(prevState => {\n      let school = Object.assign({}, prevState.school);\n      school[name] = value;\n      return { school };\n    });\n  }\n\n  submitSchool = (e) =>{\n    e.preventDefault();\n    const {school} = this.state;\n    let isValid = true;\n    for (let key in school){\n      if (school[key] === \"\") {\n        isValid = false;\n      }\n    }\n    if(isValid){\n      this.setState({\n        schools: [...this.state.schools, this.state.school]\n      });\n      this.renderForm(e);\n    }\n  }\n\n  resetForm = () => {\n    this.setState((prevState) => {\n      let school = Object.assign({}, prevState.school);\n      school[\"id\"] = uniqid();\n      school[\"schoolName\"] = \"\";\n      school[\"careerTitle\"] = \"\";\n      school[\"initialDate\"] = \"\";\n      school[\"endDate\"] = \"\";\n      return { school };\n    });\n  }\n\n  handleDelete = (itemId) => {\n    const schools = this.state.schools.filter( school => school.id !== itemId);\n    this.setState({schools : schools});\n  }\n\n  cleanEducation = (e) =>{\n    e.preventDefault();\n    this.setState({schools: [] });\n  }\n\n  renderForm = (e) => {\n    e.preventDefault();\n    const {formActive} = this.state;\n    this.setState({formActive : !formActive});\n    this.resetForm();\n  }\n\n  render(){\n    const {school, schools, formActive} = this.state;\n    let formComponent;\n    let formButton;\n    let cleanButton;\n    if(formActive) {\n      formComponent = <EducationForm\n        school={school}\n        onSubmit={this.submitSchool}\n        onChange={this.handleChange}\n        onRender={this.renderForm}\n      />\n    }else{\n      formButton = <div>\n        <button onClick={this.renderForm} className=\"sectionButton\" >Add School</button>\n      </div>\n    }\n\n    if(schools.length > 0){\n      cleanButton = <div>\n        <button onClick={this.cleanEducation}>Clean</button>\n      </div>\n    }\n\n    return (\n      <div className='EducationDiv'>\n        <div className=\"sectionTitleDiv\">\n          <h2>Education</h2>\n          {formButton}\n          {cleanButton}\n        </div>\n        {formComponent}\n        \n        <div>\n          {schools.map((school) => {\n            return (\n              <EducationItem\n                key={school.id}\n                school={school}\n                onDelete={this.handleDelete}\n              />\n            )\n          })}\n        </div>\n      </div>\n  )}\n}\n\n\nexport default Education;","import React from \"react\";\nimport dateFormat from \"./dateFormat\";\n\nconst ExperienceItem = (props) =>{\n    \n    const {companyName, positionTitle, mainTasks, initialDate, endDate, id} = props.company;\n    const initialDateFormat = dateFormat(initialDate);\n    const endDateFormat = dateFormat(endDate);\n\n    return (\n        <div className=\"companyItemDiv\">\n            <p>Company: {companyName}</p>\n            <p>Position: {positionTitle}</p>\n            <p>Description: {mainTasks}</p>\n            <p>From: {initialDateFormat}</p>\n            <p>Until: {endDateFormat}</p>\n            <button onClick={() => props.onDelete(id)}>\n                Delete\n            </button>\n        </div>\n    )\n}\n\nexport default ExperienceItem;","import React, {Component} from \"react\";\n\nclass ExperienceForm extends Component{\n\n    changeData = (e) =>{\n        e.preventDefault();\n        this.props.onChange(e);\n    }\n\n    submitData = (e) => {\n        e.preventDefault();\n        this.props.onSubmit(e);\n    }\n\n    cancelSubmit = (e) =>{\n        e.preventDefault();\n        this.props.onRender(e);\n    }\n\n    render() {\n        const {company} = this.props;\n        return (\n            <div className=\"formDiv\">\n                <form onSubmit={this.submitData}>\n                    <div className=\"form-group\">\n                    <label htmlFor=\"experienceInput\">Company Name</label>\n                    <br></br>\n                    <input\n                        onChange={this.changeData}\n                        value={company.companyName}\n                        type=\"text\"\n                        name=\"companyName\"\n                    />\n                    <br></br>\n                    <label>Position title</label>\n                    <br></br>\n                    <input\n                        onChange={this.changeData}\n                        value={company.positionTitle}\n                        type=\"text\"\n                        name=\"positionTitle\"\n                    />\n                    <br></br>\n                    <label>Description</label>\n                    <br></br>\n                    <input\n                        onChange={this.changeData}\n                        value={company.mainTasks}\n                        type=\"text\"\n                        name=\"mainTasks\"\n                    />\n                    <br></br>\n                    <label>Initial Date</label>\n                    <br></br>\n                    <input\n                        onChange={this.changeData}\n                        value={company.initialDate}\n                        type=\"date\"\n                        name=\"initialDate\"\n                    />\n                    <br></br>\n                    <label>Final Date</label>\n                    <br></br>\n                    <input\n                        onChange={this.changeData}\n                        value={company.endDate}\n                        type=\"date\"\n                        name=\"endDate\"\n                    />\n                    </div>\n                    <div className=\"buttonsDiv\">\n                        <button type=\"submit\" >\n                            Add Company\n                        </button>\n                        <button onClick={this.cancelSubmit}>\n                            Cancel\n                        </button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default ExperienceForm;\n","import React, {Component} from \"react\";\nimport uniqid from \"uniqid\";\nimport ExperienceItem from \"./ExperienceItem\";\nimport ExperienceForm from \"./ExperienceForm\";\n\nclass Experience extends Component{\n  constructor() {\n    super();\n    this.state = {\n      company: {\n        id: uniqid(),\n        companyName: \"\",\n        positionTitle: \"\",\n        mainTasks: \"\",\n        initialDate: \"\",\n        endDate: \"\",\n      },\n      companies: [],\n      formActive : false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submitCompany = this.submitCompany.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.cleanExperience = this.cleanExperience.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  handleChange = (e) => {\n    const {name, value} = e.target;\n    this.setState(prevState => {\n      let company = Object.assign({}, prevState.company);\n      company[name] = value;\n      return { company };                                \n    })\n  }\n\n  submitCompany = (e) =>{\n    e.preventDefault();\n    const {company}  = this.state;\n    let isValid = true;\n    for (let key in company){\n      if (company[key] === \"\") {\n      isValid = false;\n      }\n    }\n    if(isValid){\n      this.setState({\n        companies: [...this.state.companies, this.state.company]\n      });\n      this.renderForm(e);\n    }\n  }\n\n  resetForm = () => {\n    this.setState((prevState) => {\n      let company = Object.assign({}, prevState.company);\n      company[\"id\"] = uniqid();\n      company[\"companyName\"] = \"\";\n      company[\"positionTitle\"] = \"\";\n      company[\"mainTasks\"] = \"\";\n      company[\"initialDate\"] = \"\";\n      company[\"endDate\"] = \"\";\n      return { company };                       \n    })\n  }\n\n  handleDelete = (itemId) => {\n    const companies = this.state.companies.filter( company => company.id !== itemId);\n    this.setState({ companies : companies});\n  }\n\n  cleanExperience = (e) => {\n    e.preventDefault();\n    this.setState({companies: []});\n  }\n\n  renderForm = (e) => {\n    e.preventDefault();\n    const {formActive} = this.state;\n    this.setState({formActive : !formActive});\n    this.resetForm();\n  }\n\n  render() {\n    const {company, companies, formActive} = this.state;\n    let formComponent;\n    let formButton;\n    let cleanButton;\n    if(formActive) {\n      formComponent = <ExperienceForm\n        company={company}\n        onSubmit={this.submitCompany}\n        onChange={this.handleChange}\n        onRender={this.renderForm}\n      />\n    }else{\n      formButton = <div>\n        <button onClick={this.renderForm} className=\"sectionButton\" >Add Job</button>\n      </div>\n    }\n\n    if(companies.length > 0) {\n      cleanButton = <div>\n        <button onClick={this.cleanExperience}>Clean</button>\n      </div>\n    }\n\n    return (\n      <div className=\"ExperienceDiv\">\n        <div className=\"sectionTitleDiv\">\n          <h2>Experience</h2>\n          {formButton}\n          {cleanButton}\n        </div>\n        {formComponent}\n        \n        <div>\n          {companies.map((company) => {\n              return (\n                  <ExperienceItem \n                    key={company.id}\n                    company={company}\n                    onDelete={this.handleDelete}\n                  />\n              )\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Experience;","import React from \"react\";\n\nconst SkillItem = (props) => {\n    const {skillName, id} = props.skill;\n    return (\n        <div className=\"skillItemDiv\">\n            <p>{skillName}</p>\n            <button onClick={() => props.onDelete(id)}>\n                Delete\n            </button>\n        </div>\n    )\n}\n\nexport default SkillItem;","import React, {Component} from \"react\";\n\nclass SkillForm extends Component{\n\n    changeData = (e) => {\n        e.preventDefault();\n        this.props.onChange(e);\n    }\n\n    submitData = (e) =>{\n        e.preventDefault();\n        this.props.onSubmit(e);\n    }\n    \n    cancelSubmit = (e) => {\n        e.preventDefault();\n        this.props.onRender(e);\n    }\n\n    render() {\n        const {skill} = this.props;\n\n        return (\n            <div className=\"formDiv\">\n                <form onSubmit={this.submitData}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"skillInput\">Enter Skill</label>\n                        <br></br>\n                        <input\n                            onChange={this.changeData}\n                            value={skill.skillName}\n                            type=\"text\"\n                            name=\"skillName\"\n                        />\n                    </div>\n                    <div className=\"buttonsDiv\">\n                        <button type=\"submit\" >\n                            Add Skill\n                        </button>\n                        <button onClick={this.cancelSubmit}>\n                            Cancel\n                        </button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SkillForm;","import React, {Component} from \"react\";\nimport uniqid from \"uniqid\";\nimport SkillItem from \"./SkillItem\";\nimport SkillForm from \"./SkillForm\";\n\nclass Skills extends Component{\n    constructor() {\n        super();\n        this.state = {\n            skill : {\n                id: uniqid(),\n                skillName: \"\"\n            },\n            skills: [],\n            formActive: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.submitSkill = this.submitSkill.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.cleanSkills = this.cleanSkills.bind(this);\n        this.renderForm = this.renderForm.bind(this);\n    }\n\n    handleChange = (e) => {\n        const {name, value} = e.target;\n        this.setState(prevState => {\n            let skill = Object.assign({}, prevState.skill);\n            skill[name] = value;\n            return {skill};\n        });\n    }\n\n    submitSkill = (e) =>{\n        e.preventDefault();\n        const {skill} = this.state;\n        let isValid = true;\n        for (let key in skill){\n            if(skill[key] === \"\") {\n                isValid = false;\n            }\n        }\n        if(isValid){\n            this.setState({\n                skills: [...this.state.skills, this.state.skill]\n            });\n            this.renderForm(e);\n        }\n    }\n\n    resetForm = () => {\n        this.setState((prevState) => {\n            let skill = Object.assign({}, prevState.skill);\n            skill[\"id\"] = uniqid();\n            skill[\"skillName\"] = \"\";\n            return { skill};\n        });\n    }\n\n    handleDelete = (itemId) => {\n        const skills = this.state.skills.filter( skill => skill.id !== itemId);\n        this.setState({skills : skills});\n    }\n\n    cleanSkills = (e) => {\n        e.preventDefault();\n        this.setState({skills: []});\n    }\n\n    renderForm = (e) => {\n        e.preventDefault();\n        const {formActive} = this.state;\n        this.setState({formActive : !formActive});\n        this.resetForm();\n    }\n    \n    render() {\n        const {skill, skills, formActive} = this.state;\n        let formComponent;\n        let formButton;\n        let cleanButton;\n        if(formActive) {\n        formComponent = <SkillForm\n                skill={skill}\n                onSubmit={this.submitSkill}\n                onChange={this.handleChange}\n                onRender={this.renderForm}\n            />\n        }else{\n        formButton = <div >\n            <button onClick={this.renderForm} className=\"sectionButton\" >Add Skill</button>\n        </div>\n        }\n\n        if(skills.length > 0){\n            cleanButton = <div>\n              <button onClick={this.cleanSkills}>Clean</button>\n            </div>\n        }\n\n        return (\n            <div className=\"SkillsDiv\">\n                <div className=\"sectionTitleDiv\">\n                    <h2>Skills</h2>\n                    {formButton}\n                    {cleanButton}\n                </div>\n                {formComponent}\n                <div>\n                    {skills.map((skill) => {\n                        return (\n                            <SkillItem\n                                key={skill.id}\n                                skill={skill}\n                                onDelete={this.handleDelete}\n                            />\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Skills;","import React, { Component } from \"react\";\nimport Title from \"./components/Title\";\nimport General from \"./components/General\";\nimport Education from \"./components/Education\";\nimport Experience from \"./components/Experience\";\nimport Skills from \"./components/Skills\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className='App'>\n        <Title/>\n        <General/>\n        <Education/>\n        <Experience/>\n        <Skills/>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}