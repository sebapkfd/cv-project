{"version":3,"sources":["components/Title.js","components/GeneralForm.js","components/General.js","components/dateFormat.js","components/EducationItem.js","components/EducationForm.js","components/Education.js","components/ExperienceItem.js","components/ExperienceForm.js","components/Experience.js","components/SkillItem.js","components/SkillForm.js","components/Skills.js","App.js","index.js"],"names":["Title","className","href","target","rel","src","alt","GeneralForm","props","values","onSubmit","e","preventDefault","id","htmlFor","type","name","defaultValue","lastname","phone","email","onClick","onRender","General","formComponent","formButton","cleanButton","useState","info","setInfo","formActive","setFormActive","infoAdded","setInfoAdded","renderForm","profile","value","isValid","key","dateFormat","dateStr","aux","split","join","EducationItem","school","schoolName","careerTitle","initialDate","endDate","initialDateFormat","endDateFormat","onDelete","EducationForm","changeData","onChange","Education","uniqid","setSchool","schools","setSchools","handleDelete","itemId","filteredSchools","filter","length","map","ExperienceItem","company","companyName","positionTitle","mainTasks","ExperienceForm","Experience","setCompany","companies","setCompanies","filteredCompanies","SkillItem","skill","skillName","SkillForm","Skills","setSkill","skills","setSkills","filteredSkills","App","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b1e4117.chunk.js","sourcesContent":["const Title = () =>{\n    return (\n        <div className='titleDiv'>\n            <h1>CV Project</h1>\n            <a href=\"https://github.com/sebapkfd/cv-project\" target=\"_blank\" rel=\"noreferrer\">\n                <img src=\"https://img.icons8.com/fluent-systems-filled/24/ffffff/github.png\" alt=\"Github\"/>\n            </a>\n        </div>\n    )\n}\n\nexport default Title;","import React from \"react\";\n\nconst GeneralForm = (props) => {\n\n    const submitData = (e) => {\n        e.preventDefault();\n        props.onSubmit(e);\n    }\n\n    const cancelSubmit = (e) => {\n        e.preventDefault();\n        props.onRender(e);\n    }\n\n    const values = props.values;\n    return (\n        <div className=\"formDiv\">\n            <form onSubmit={submitData} id=\"generalInfoForm\">\n                <div className=\"form-group\">\n                <label htmlFor=\"generalInput\">Name</label>\n                <br></br>\n                <input type=\"text\" name=\"name\" defaultValue={values.name}/>\n                <br></br>\n                <label>Career</label>\n                <br></br>\n                <input type=\"text\" name=\"lastname\" defaultValue={values.lastname}/>\n                <br></br>\n                <label>Phone</label>\n                <br></br>\n                <input type=\"text\" name=\"phone\" defaultValue={values.phone}/>\n                <br></br>\n                <label>Email</label>\n                <br></br>\n                <input type=\"text\" name=\"email\" defaultValue={values.email}/>\n                </div>\n                <div className=\"buttonsDiv\">\n                <button type=\"submit\" >\n                    Submit\n                </button>\n                <button onClick={cancelSubmit}>\n                    Cancel\n                </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default GeneralForm;","import React, {useState} from \"react\";\nimport GeneralForm from \"./GeneralForm\"\n\nconst General = () => {\n    const [info, setInfo] = useState({\n        name: \"\",\n        lastname: \"\",\n        phone: \"\",\n        email: \"\"\n    });\n    const [formActive, setFormActive] = useState(false);\n    const [infoAdded, setInfoAdded] = useState(false);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const profile = {\n            name : e.target.name.value,\n            lastname : e.target.lastname.value,\n            phone : e.target.phone.value,\n            email : e.target.email.value\n        };\n        let isValid = true;\n        for (let key in profile){\n            if(profile[key] === \"\"){\n                isValid = false;\n            }\n        }\n        if(isValid){\n            setInfo(profile);\n            setInfoAdded(true);\n            renderForm(e);\n        }\n    }\n\n    const cleanInfo = (e) => {\n        e.preventDefault();\n        setInfo({\n            name : \"\",\n            lastname : \"\",\n            phone : \"\",\n            email : \"\"\n        })\n        setInfoAdded(false);\n        setFormActive(false);\n    }\n\n    const renderForm = (e) => {\n        e.preventDefault();\n        setFormActive(!formActive);\n    }\n\n    const {name, lastname, phone, email} = info;\n    let formComponent;\n    let formButton;\n    let cleanButton;\n    if(formActive) {\n        formComponent = <GeneralForm \n            onSubmit={handleSubmit} \n            values={info}\n            onRender={renderForm}\n    />\n    } else {\n        formButton = (!infoAdded) ? (\n            <div >\n                <button onClick={renderForm} className=\"sectionButton\" >Add Information</button>\n            </div>\n        ) : (\n            <div>\n                <button onClick={renderForm} className=\"sectionButton\" >Edit Information</button>\n            </div>\n        )\n    }\n\n    if(infoAdded){\n        cleanButton = <div>\n            <button onClick={cleanInfo}>Clean</button>\n        </div>\n    }\n\n    return (\n        <div className=\"GeneralDiv\">\n            <div className=\"sectionTitleDiv\">\n                <h2>Personal Information</h2>\n                {formButton}\n                {cleanButton}\n            </div>\n            {formComponent}\n            <p>Name: {name}</p>\n            <p>Last Name:{lastname}</p>\n            <p>Phone:{phone}</p>\n            <p>Email: {email}</p>\n        </div>\n    )\n}\n\nexport default General;","const dateFormat = (dateStr) =>{\n    let aux = dateStr.split(/\\D/g);\n    return [aux[2],aux[1],aux[0] ].join(\"-\");\n};\n\nexport default dateFormat;","import React from \"react\";\nimport dateFormat from \"./dateFormat\";\n\nconst EducationItem = (props) =>{\n    \n    const {schoolName, careerTitle, initialDate, endDate, id} = props.school;\n    const initialDateFormat = dateFormat(initialDate);\n    const endDateFormat = dateFormat(endDate);\n\n    return (\n        <div className=\"schoolItemDiv\">\n            <p>School: {schoolName}</p>\n            <p>Career: {careerTitle}</p>\n            <p>From: {initialDateFormat}</p>\n            <p>Until: {endDateFormat}</p>\n            <button onClick={() => props.onDelete(id)}>\n                Delete\n            </button>\n        </div>\n    )\n}\n\nexport default EducationItem;","import React from \"react\";\n\nconst EducationForm = (props) => {\n    const changeData = (e) =>{\n        e.preventDefault();\n        props.onChange(e);\n    }\n\n    const submitData = (e) => {\n        e.preventDefault();\n        props.onSubmit(e);\n    }\n\n    const cancelSubmit = (e) => {\n        e.preventDefault();\n        props.onRender(e);\n    }\n\n    const {school} = props;\n\n    return (\n        <div className=\"formDiv\">\n            <form onSubmit={submitData}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"schoolInput\">Enter School</label>\n                    <br></br>\n                    <input\n                        onChange={changeData}\n                        value={school.schoolName}\n                        type=\"text\"\n                        name=\"schoolName\"\n                    />\n                    <br></br>\n                    <label>Enter Career</label>\n                    <br></br>\n                    <input\n                        onChange={changeData}\n                        value={school.careerTitle}\n                        type=\"text\"\n                        name=\"careerTitle\"\n                    />\n                    <br></br>\n                    <label>Enter Initial Date</label>\n                    <br></br>\n                    <input\n                        onChange={changeData}\n                        value={school.initialDate}\n                        type=\"date\"\n                        name=\"initialDate\"\n                    />\n                    <br></br>\n                    <label>Enter Final Date</label>\n                    <br></br>\n                    <input\n                        onChange={changeData}\n                        value={school.endDate}\n                        type=\"date\"\n                        name=\"endDate\"\n                    />\n                </div>\n                <div className=\"buttonsDiv\">\n                    <button type=\"submit\" >\n                        Add School\n                    </button>\n                    <button onClick={cancelSubmit}>\n                        Cancel\n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default EducationForm;","import React, { useState } from \"react\";\nimport uniqid from \"uniqid\";\nimport EducationItem from \"./EducationItem\";\nimport EducationForm from \"./EducationForm\";\n\nconst Education = () => {\n    const [school, setSchool] = useState({\n        id: uniqid(),\n        schoolName: \"\",\n        careerTitle: \"\",\n        initialDate: \"\",\n        endDate: \"\"\n    })\n    const [schools, setSchools] = useState([]);\n    const [formActive, setFormActive] = useState(false);\n\n      \n    const handleChange = (e) => {\n        const {name, value} = e.target;\n        setSchool({...school, [name]: value});\n    }\n\n    const submitSchool = (e) =>{\n        e.preventDefault();\n        let isValid = true;\n        for (let key in school){\n            if (school[key] === \"\") {\n                isValid = false;\n            }\n        }\n        if(isValid){\n            setSchools([...schools, school]);\n            renderForm(e);\n        }\n    }\n\n    const resetForm = () => {\n        setSchool({\n            id: uniqid(),\n            schoolName: \"\",\n            careerTitle: \"\",\n            initialDate: \"\",\n            endDate: \"\"\n        });\n    }\n\n    const handleDelete = (itemId) => {\n        const filteredSchools = schools.filter( school => school.id !== itemId);\n        setSchools(filteredSchools);\n    }\n\n    const cleanEducation = (e) =>{\n        e.preventDefault();\n        setSchools([]);\n    }\n\n    const renderForm = (e) => {\n        e.preventDefault();\n        setFormActive(!formActive);\n        resetForm();\n    }\n\n    let formComponent;\n    let formButton;\n    let cleanButton;\n    if(formActive) {\n      formComponent = <EducationForm\n        school={school}\n        onSubmit={submitSchool}\n        onChange={handleChange}\n        onRender={renderForm}\n      />\n    }else{\n      formButton = <div>\n        <button onClick={renderForm} className=\"sectionButton\" >Add School</button>\n      </div>\n    }\n\n    if(schools.length > 0){\n      cleanButton = <div>\n        <button onClick={cleanEducation}>Clean</button>\n      </div>\n    }\n\n    return (\n      <div className='EducationDiv'>\n        <div className=\"sectionTitleDiv\">\n          <h2>Education</h2>\n          {formButton}\n          {cleanButton}\n        </div>\n        {formComponent}\n        \n        <div>\n          {schools.map((school) => {\n            return (\n              <EducationItem\n                key={school.id}\n                school={school}\n                onDelete={handleDelete}\n              />\n            )\n          })}\n        </div>\n      </div>\n    );\n}\n\nexport default Education;","import React from \"react\";\nimport dateFormat from \"./dateFormat\";\n\nconst ExperienceItem = (props) =>{\n    \n    const {companyName, positionTitle, mainTasks, initialDate, endDate, id} = props.company;\n    const initialDateFormat = dateFormat(initialDate);\n    const endDateFormat = dateFormat(endDate);\n\n    return (\n        <div className=\"companyItemDiv\">\n            <p>Company: {companyName}</p>\n            <p>Position: {positionTitle}</p>\n            <p>Description: {mainTasks}</p>\n            <p>From: {initialDateFormat}</p>\n            <p>Until: {endDateFormat}</p>\n            <button onClick={() => props.onDelete(id)}>\n                Delete\n            </button>\n        </div>\n    )\n}\n\nexport default ExperienceItem;","import React from \"react\";\n\nconst ExperienceForm = (props) => {\n\n    const changeData = (e) =>{\n        e.preventDefault();\n        props.onChange(e);\n    }\n\n    const submitData = (e) => {\n        e.preventDefault();\n        props.onSubmit(e);\n    }\n\n    const cancelSubmit = (e) =>{\n        e.preventDefault();\n        props.onRender(e);\n    }\n\n    const {company} = props;\n    return (\n        <div className=\"formDiv\">\n            <form onSubmit={submitData}>\n                <div className=\"form-group\">\n                <label htmlFor=\"experienceInput\">Company Name</label>\n                <br></br>\n                <input\n                    onChange={changeData}\n                    value={company.companyName}\n                    type=\"text\"\n                    name=\"companyName\"\n                />\n                <br></br>\n                <label>Position title</label>\n                <br></br>\n                <input\n                    onChange={changeData}\n                    value={company.positionTitle}\n                    type=\"text\"\n                    name=\"positionTitle\"\n                />\n                <br></br>\n                <label>Description</label>\n                <br></br>\n                <input\n                    onChange={changeData}\n                    value={company.mainTasks}\n                    type=\"text\"\n                    name=\"mainTasks\"\n                />\n                <br></br>\n                <label>Initial Date</label>\n                <br></br>\n                <input\n                    onChange={changeData}\n                    value={company.initialDate}\n                    type=\"date\"\n                    name=\"initialDate\"\n                />\n                <br></br>\n                <label>Final Date</label>\n                <br></br>\n                <input\n                    onChange={changeData}\n                    value={company.endDate}\n                    type=\"date\"\n                    name=\"endDate\"\n                />\n                </div>\n                <div className=\"buttonsDiv\">\n                    <button type=\"submit\" >\n                        Add Company\n                    </button>\n                    <button onClick={cancelSubmit}>\n                        Cancel\n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ExperienceForm;\n","import React, {useState} from \"react\";\nimport uniqid from \"uniqid\";\nimport ExperienceItem from \"./ExperienceItem\";\nimport ExperienceForm from \"./ExperienceForm\";\n\nconst Experience = () => {\n    const [company, setCompany] = useState({\n        id: uniqid(),\n        companyName: \"\",\n        positionTitle: \"\",\n        mainTasks: \"\",\n        initialDate: \"\",\n        endDate: \"\"\n    });\n    const [companies, setCompanies] = useState([]);\n    const [formActive, setFormActive] = useState(false);\n\n    const handleChange = (e) => {\n        const {name, value} = e.target;\n        setCompany({...company, [name]: value});\n    }\n\n    const submitCompany = (e) =>{\n        e.preventDefault();\n        let isValid = true;\n        for (let key in company){\n            if (company[key] === \"\") {\n                isValid = false;\n            }\n        }\n        if(isValid){\n            setCompanies([...companies, company]);\n            renderForm(e);\n        }\n    }\n\n    const resetForm = () => {\n        setCompany({\n            id: uniqid(),\n            companyName: \"\",\n            positionTitle: \"\",\n            mainTasks: \"\",\n            initialDate: \"\",\n            endDate: \"\"\n        });\n    }\n\n    const handleDelete = (itemId) => {\n        const filteredCompanies = companies.filter( company => company.id !== itemId);\n        setCompanies(filteredCompanies);\n    }\n\n    const cleanExperience = (e) => {\n        e.preventDefault();\n        setCompanies([]);\n    }\n\n    const renderForm = (e) => {\n        e.preventDefault();\n        setFormActive(!formActive);\n        resetForm();\n    }\n\n    let formComponent;\n    let formButton;\n    let cleanButton;\n    if(formActive) {\n      formComponent = <ExperienceForm\n        company={company}\n        onSubmit={submitCompany}\n        onChange={handleChange}\n        onRender={renderForm}\n      />\n    }else{\n      formButton = <div>\n        <button onClick={renderForm} className=\"sectionButton\" >Add Job</button>\n      </div>\n    }\n\n    if(companies.length > 0) {\n      cleanButton = <div>\n        <button onClick={cleanExperience}>Clean</button>\n      </div>\n    }\n\n    return (\n      <div className=\"ExperienceDiv\">\n        <div className=\"sectionTitleDiv\">\n          <h2>Experience</h2>\n          {formButton}\n          {cleanButton}\n        </div>\n        {formComponent}\n        \n        <div>\n          {companies.map((company) => {\n              return (\n                  <ExperienceItem \n                    key={company.id}\n                    company={company}\n                    onDelete={handleDelete}\n                  />\n              )\n          })}\n        </div>\n      </div>\n    )\n}\n\n\n// class Experience extends Component{\n//   constructor() {\n//     super();\n//     state = {\n//       company: {\n//         id: uniqid(),\n//         companyName: \"\",\n//         positionTitle: \"\",\n//         mainTasks: \"\",\n//         initialDate: \"\",\n//         endDate: \"\",\n//       },\n//       companies: [],\n//       formActive : false\n//     };\n//     handleChange = handleChange.bind(;\n//     submitCompany = submitCompany.bind(;\n//     handleDelete = handleDelete.bind(;\n//     cleanExperience = cleanExperience.bind(;\n//     renderForm = renderForm.bind(;\n//   }\n\n//   handleChange = (e) => {\n//     const {name, value} = e.target;\n//     setState(prevState => {\n//       let company = Object.assign({}, prevState.company);\n//       company[name] = value;\n//       return { company };                                \n//     })\n//   }\n\n//   submitCompany = (e) =>{\n//     e.preventDefault();\n//     const {company}  = state;\n//     let isValid = true;\n//     for (let key in company){\n//       if (company[key] === \"\") {\n//       isValid = false;\n//       }\n//     }\n//     if(isValid){\n//       setState({\n//         companies: [...state.companies, state.company]\n//       });\n//       renderForm(e);\n//     }\n//   }\n\n//   resetForm = () => {\n//     setState((prevState) => {\n//       let company = Object.assign({}, prevState.company);\n//       company[\"id\"] = uniqid();\n//       company[\"companyName\"] = \"\";\n//       company[\"positionTitle\"] = \"\";\n//       company[\"mainTasks\"] = \"\";\n//       company[\"initialDate\"] = \"\";\n//       company[\"endDate\"] = \"\";\n//       return { company };                       \n//     })\n//   }\n\n//   handleDelete = (itemId) => {\n//     const companies = state.companies.filter( company => company.id !== itemId);\n//     setState({ companies : companies});\n//   }\n\n//   cleanExperience = (e) => {\n//     e.preventDefault();\n//     setState({companies: []});\n//   }\n\n//   renderForm = (e) => {\n//     e.preventDefault();\n//     const {formActive} = state;\n//     setState({formActive : !formActive});\n//     resetForm();\n//   }\n\n//   render() {\n//     const {company, companies, formActive} = state;\n//     let formComponent;\n//     let formButton;\n//     let cleanButton;\n//     if(formActive) {\n//       formComponent = <ExperienceForm\n//         company={company}\n//         onSubmit={submitCompany}\n//         onChange={handleChange}\n//         onRender={renderForm}\n//       />\n//     }else{\n//       formButton = <div>\n//         <button onClick={renderForm} className=\"sectionButton\" >Add Job</button>\n//       </div>\n//     }\n\n//     if(companies.length > 0) {\n//       cleanButton = <div>\n//         <button onClick={cleanExperience}>Clean</button>\n//       </div>\n//     }\n\n//     return (\n//       <div className=\"ExperienceDiv\">\n//         <div className=\"sectionTitleDiv\">\n//           <h2>Experience</h2>\n//           {formButton}\n//           {cleanButton}\n//         </div>\n//         {formComponent}\n        \n//         <div>\n//           {companies.map((company) => {\n//               return (\n//                   <ExperienceItem \n//                     key={company.id}\n//                     company={company}\n//                     onDelete={handleDelete}\n//                   />\n//               )\n//           })}\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n\n\nexport default Experience;","import React from \"react\";\n\nconst SkillItem = (props) => {\n    const {skillName, id} = props.skill;\n    return (\n        <div className=\"skillItemDiv\">\n            <p>{skillName}</p>\n            <button onClick={() => props.onDelete(id)}>\n                Delete\n            </button>\n        </div>\n    )\n}\n\nexport default SkillItem;","import React from \"react\";\n\n\nconst SkillForm = (props) => {\n    const changeData = (e) => {\n        e.preventDefault();\n        props.onChange(e);\n    }\n\n    const submitData = (e) =>{\n        e.preventDefault();\n        props.onSubmit(e);\n    }\n    \n    const cancelSubmit = (e) => {\n        e.preventDefault();\n        props.onRender(e);\n    }\n\n    const {skill} = props;\n\n    return (\n        <div className=\"formDiv\">\n            <form onSubmit={submitData}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"skillInput\">Enter Skill</label>\n                    <br></br>\n                    <input\n                        onChange={changeData}\n                        value={skill.skillName}\n                        type=\"text\"\n                        name=\"skillName\"\n                    />\n                </div>\n                <div className=\"buttonsDiv\">\n                    <button type=\"submit\" >\n                        Add Skill\n                    </button>\n                    <button onClick={cancelSubmit}>\n                        Cancel\n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n\nexport default SkillForm;","import React, {useState} from \"react\";\nimport uniqid from \"uniqid\";\nimport SkillItem from \"./SkillItem\";\nimport SkillForm from \"./SkillForm\";\n\nconst Skills = () => {\n    const [skill, setSkill] = useState({ id: uniqid(), skillName: \"\"})\n    const [skills, setSkills] = useState([]);\n    const [formActive, setFormActive] = useState(false);\n\n    const handleChange = (e) => {\n        const {name, value} = e.target;\n        setSkill({...skill, [name]: value});\n\n    }\n\n    const submitSkill = (e) => {\n        e.preventDefault();\n        let isValid = true;\n        for (let key in skill){\n            if(skill[key] === \"\") {\n                isValid = false;\n            }\n        }\n        if(isValid) {\n            setSkills([...skills, skill]);\n            renderForm(e);\n        }\n    }\n\n    const resetForm = (e) => {\n        setSkill({ id: uniqid(), skillName: \"\"});\n    }\n\n    const handleDelete = (itemId) =>{\n        const filteredSkills = skills.filter(skill => skill.id !== itemId)\n        setSkills(filteredSkills);\n    }\n\n    const cleanSkills = (e) =>{\n        e.preventDefault();\n        setSkills([]);\n    }\n\n    const renderForm = (e) =>{\n        e.preventDefault();\n        setFormActive(!formActive);\n        resetForm();\n    }\n\n    let formComponent;\n    let formButton;\n    let cleanButton;\n    if(formActive) {\n    formComponent = <SkillForm\n            skill={skill}\n            onSubmit={submitSkill}\n            onChange={handleChange}\n            onRender={renderForm}\n        />\n    }else{\n    formButton = <div >\n        <button onClick={renderForm} className=\"sectionButton\" >Add Skill</button>\n    </div>\n    }\n\n    if(skills.length > 0){\n        cleanButton = <div>\n            <button onClick={cleanSkills}>Clean</button>\n        </div>\n    }\n\n    return (\n        <div className=\"SkillsDiv\">\n            <div className=\"sectionTitleDiv\">\n                <h2>Skills</h2>\n                {formButton}\n                {cleanButton}\n            </div>\n            {formComponent}\n            <div>\n                {skills.map((skill) => {\n                    return (\n                        <SkillItem\n                            key={skill.id}\n                            skill={skill}\n                            onDelete={handleDelete}\n                        />\n                    )\n                })}\n            </div>\n        </div>\n    )\n\n}\n\nexport default Skills;","import React, { Component } from \"react\";\nimport Title from \"./components/Title\";\nimport General from \"./components/General\";\nimport Education from \"./components/Education\";\nimport Experience from \"./components/Experience\";\nimport Skills from \"./components/Skills\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className='App'>\n        <Title/>\n        <General/>\n        <Education/>\n        <Experience/>\n        <Skills/>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}